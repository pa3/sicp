(define (cycle? x)
  (define (last-pair? x) (null? (cdr x)))
  (define (cycle?-inner a b)
    (cond ((or (null? a)
               (last-pair? a)
               (last-pair? b)
               (last-pair? (cdr b))) #f)
          ((eq? (cdr a) (cddr b)) #t)
          (else (cycle?-inner (cdr a) (cddr b)))))
  (cycle?-inner x x))
